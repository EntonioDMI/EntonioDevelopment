-- Основной скрипт для управления хитбоксами

_G.Disabled = true
_G.FriendList = _G.FriendList or {}  -- Инициализация списка друзей

-- Функция для сброса хитбоксов
local function resetHitbox(v)
    if v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
        local rootPart = v.Character.HumanoidRootPart
        rootPart.Size = Vector3.new(2, 2, 1) -- Восстанавливаем оригинальный размер
        rootPart.Transparency = 1
        rootPart.Material = "Plastic"
    end
end

-- Функция для сброса хитбоксов тиммейтов
local function resetTeamHitboxes()
    local localPlayer = game:GetService('Players').LocalPlayer
    local localTeam = localPlayer.Team

    for _, v in ipairs(game:GetService('Players'):GetPlayers()) do
        if v ~= localPlayer and v.Team == localTeam then
            resetHitbox(v)
        end
    end
end

-- Основной код для управления хитбоксами
local function updateHitbox(v)
    if v ~= game:GetService('Players').LocalPlayer and v.Character and v.Character:FindFirstChild("Humanoid") and v.Character:FindFirstChild("HumanoidRootPart") then
        local humanoid = v.Character.Humanoid
        local rootPart = v.Character.HumanoidRootPart

        if humanoid.Health > 0 then
            rootPart.Size = Vector3.new(_G.HeadSize, _G.HeadSize, _G.HeadSize)
            rootPart.Transparency = _G.HitboxTransparency
            rootPart.Color = _G.HitboxColor
            rootPart.Material = "Neon"
            rootPart.CanCollide = false
        else
            resetHitbox(v)
        end
    end
end

-- Запуск цикла для сброса хитбоксов
game:GetService('RunService').Heartbeat:Connect(function(deltaTime)
    if _G.TeamCheck then
        resetTeamHitboxes()
    end
end)

game:GetService('RunService').RenderStepped:Connect(function()
    local localPlayer = game:GetService('Players').LocalPlayer
    local localTeam = localPlayer.Team

    for _, v in ipairs(game:GetService('Players'):GetPlayers()) do
        if v.Name ~= localPlayer.Name then
            local isSameTeam = _G.TeamCheck and v.Team == localTeam
            local isFriend = table.find(_G.FriendList, v.Name) ~= nil
            if not _G.Disabled and not isSameTeam and not isFriend then
                pcall(function()
                    updateHitbox(v)
                end)
            elseif isFriend then
                resetHitbox(v)
            end
        end
    end
end)

game:GetService('Players').PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(character)
        wait(0.1)
        local isFriend = table.find(_G.FriendList, player.Name) ~= nil
        if not _G.Disabled and not isFriend then
            pcall(function()
                updateHitbox(player)
            end)
        else
            resetHitbox(player)
        end

        -- Подписываемся на событие смерти один раз при создании персонажа
        local humanoid = character:FindFirstChild("Humanoid")
        if humanoid then
            humanoid.Died:Connect(function()
                resetHitbox(player)
            end)
        end
    end)
end)

-- Отслеживание изменений в списке друзей
local lastFriendList = {}

game:GetService('RunService').RenderStepped:Connect(function()
    local friendListChanged = false

    -- Проверяем, изменился ли список друзей
    if #lastFriendList ~= #_G.FriendList then
        friendListChanged = true
    else
        for _, friendName in ipairs(_G.FriendList) do
            if not table.find(lastFriendList, friendName) then
                friendListChanged = true
                break
            end
        end
    end

    -- Если список друзей изменился, обновляем хитбоксы
    if friendListChanged then
        lastFriendList = {unpack(_G.FriendList)}

        for _, v in ipairs(game:GetService('Players'):GetPlayers()) do
            local isFriend = table.find(_G.FriendList, v.Name) ~= nil
            if isFriend then
                resetHitbox(v)
            elseif not _G.Disabled then
                updateHitbox(v)
            end
        end
    end
end)
