local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local Window = Fluent:CreateWindow({
    Title = "Fluent Menu",
    SubTitle = "by dawid",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

-- Инициализация глобальных переменных
_G.Aimbot = false
_G.Aimbot_FOV_Radius = 200
_G.Aimbot_FOV_Color = Color3.fromRGB(255, 255, 255)
_G.ToggleFriendMode = false
_G.Aimbot_AimPart = "Head"
_G.Aimbot_TeamCheck = false
_G.Aimbot_Draw_FOV = true
_G.Aimbot_visiblecheck = false
_G.Aimbot_Onscreen = true
_G.Aiming = false

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

local MainSection = Tabs.Main:AddSection("Aimbot Settings")
local FriendSection = Tabs.Main:AddSection("Friend System")

MainSection:AddToggle("AimbotToggle", {
    Title = "Enable Aimbot",
    Description = "Toggle aimbot functionality",
    Default = false,
    Callback = function(state)
        _G.Aimbot = state
    end
})

MainSection:AddSlider("FOVSlider", {
    Title = "Aimbot FOV",
    Description = "Set the field of view for aimbot",
    Default = 200,
    Min = 50,
    Max = 500,
    Rounding = 1,
    Callback = function(value)
        _G.Aimbot_FOV_Radius = value
    end
})

MainSection:AddColorpicker("FOVColorpicker", {
    Title = "FOV Color",
    Description = "Select color for FOV circle",
    Default = Color3.fromRGB(255, 255, 255),
    Callback = function(color)
        _G.Aimbot_FOV_Color = color
    end
})

FriendSection:AddToggle("FriendModeToggle", {
    Title = "Toggle Friend Mode",
    Description = "Enable or disable friend mode",
    Default = false,
    Callback = function(state)
        _G.ToggleFriendMode = state
    end
})

Window:SelectTab(1)

-- Функционал аимбота и системы друзей
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Mouse = LocalPlayer:GetMouse()

local Friends = {}

local FOVCircle = Drawing.new("Circle")
FOVCircle.Radius = _G.Aimbot_FOV_Radius
FOVCircle.Thickness = 1
FOVCircle.Filled = false
FOVCircle.Transparency = 1
FOVCircle.Color = _G.Aimbot_FOV_Color
FOVCircle.Visible = _G.Aimbot_Draw_FOV

local function GetClosestPlayer()
    local closestPlayer = nil
    local shortestDistance = _G.Aimbot_FOV_Radius

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild(_G.Aimbot_AimPart) then
            if _G.Aimbot_TeamCheck and player.Team == LocalPlayer.Team then
                continue
            end

            local partPosition = player.Character[_G.Aimbot_AimPart].Position
            local screenPoint, onScreen = Camera:WorldToViewportPoint(partPosition)

            if onScreen or not _G.Aimbot_Onscreen then
                local distance = (Vector2.new(screenPoint.X, screenPoint.Y) - Vector2.new(Mouse.X, Mouse.Y)).Magnitude
                if distance < shortestDistance then
                    if _G.Aimbot_visiblecheck then
                        local ray = Ray.new(Camera.CFrame.Position, (partPosition - Camera.CFrame.Position).unit * 500)
                        local hit, _ = workspace:FindPartOnRay(ray, LocalPlayer.Character, false, true)
                        if hit and hit:IsDescendantOf(player.Character) then
                            closestPlayer = player
                            shortestDistance = distance
                        end
                    else
                        closestPlayer = player
                        shortestDistance = distance
                    end
                end
            end
        end
    end

    return closestPlayer
end

UserInputService.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        _G.Aiming = true
    elseif input.UserInputType == Enum.UserInputType.MouseButton1 and _G.ToggleFriendMode then
        local target = Mouse.Target
        if target and target.Parent and Players:FindFirstChild(target.Parent.Name) then
            local player = Players:FindFirstChild(target.Parent.Name)
            if Friends[player.Name] then
                Friends[player.Name] = nil
                player.Character.Head.BillboardGui.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            else
                Friends[player.Name] = true
                player.Character.Head.BillboardGui.TextLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
            end
        end
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        _G.Aiming = false
    end
end)

RunService.RenderStepped:Connect(function()
    FOVCircle.Position = Vector2.new(Mouse.X, Mouse.Y)
    FOVCircle.Radius = _G.Aimbot_FOV_Radius
    FOVCircle.Color = _G.Aimbot_FOV_Color
    FOVCircle.Visible = _G.Aimbot_Draw_FOV

    if _G.Aiming and _G.Aimbot then
        local closestPlayer = GetClosestPlayer()
        if closestPlayer and closestPlayer.Character and closestPlayer.Character:FindFirstChild(_G.Aimbot_AimPart) then
            Camera.CFrame = CFrame.new(Camera.CFrame.Position, closestPlayer.Character[_G.Aimbot_AimPart].Position)
        end
    end

    for playerName, _ in pairs(Friends) do
        local player = Players:FindFirstChild(playerName)
        if player and player.Character then
            local head = player.Character:FindFirstChild("Head")
            if head then
                if not head:FindFirstChild("BillboardGui") then
                    local billboard = Instance.new("BillboardGui", head)
                    billboard.Size = UDim2.new(0, 100, 0, 100)
                    billboard.StudsOffset = Vector3.new(0, 2, 0)
                    billboard.AlwaysOnTop = true

                    local textLabel = Instance.new("TextLabel", billboard)
                    textLabel.Size = UDim2.new(1, 0, 1, 0)
                    textLabel.BackgroundTransparency = 1
                    textLabel.Text = player.Name
                    textLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
                    textLabel.TextScaled = true
                else
                    head.BillboardGui.Enabled = true
                end
            end
        end
    end
end)
