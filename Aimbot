-- Global Configuration
_G.AimbotTeamCheck = false   -- Set to true to only target players on different teams
_G.AimbotFOV = 150           -- Field of View
_G.AimbotSmoothing = 1       -- Camera smoothing factor
_G.AimbotFOVColor = Color3.fromRGB(255, 128, 128) -- FOV circle color
_G.AimbotFOVThickness = 1.5  -- FOV circle thickness

-- Services
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- GUI
local FOVring = Drawing.new("Circle")
FOVring.Visible = true
FOVring.Thickness = _G.AimbotFOVThickness
FOVring.Radius = _G.AimbotFOV
FOVring.Transparency = 1
FOVring.Color = _G.AimbotFOVColor

local function getClosestVisiblePlayer(camera)
    local ray = Ray.new(camera.CFrame.Position, camera.CFrame.LookVector)
    local closestPlayer = nil
    local closestDistance = math.huge
    
    for _, player in pairs(game.Players:GetPlayers()) do
        if player ~= game.Players.LocalPlayer then
            local character = player.Character
            if character and character:FindFirstChild("Head") then
                local headPosition = character.Head.Position
                local targetPosition = ray:ClosestPoint(headPosition)
                local distance = (targetPosition - headPosition).Magnitude
                
                if distance < closestDistance then
                    closestDistance = distance
                    closestPlayer = player
                end
            end
        end
    end
    
    return closestPlayer
end

local aimbotEnabled = false
local function updateAimbot()
    local mouseLocation = UserInputService:GetMouseLocation()
    FOVring.Position = Vector2.new(mouseLocation.X, mouseLocation.Y)
    
    if aimbotEnabled then
        local currentCamera = workspace.CurrentCamera
        local crosshairPosition = Vector2.new(mouseLocation.X, mouseLocation.Y)
        local closestPlayer = getClosestVisiblePlayer(currentCamera)
        
        if closestPlayer then
            local headPosition = closestPlayer.Character.Head.Position
            local headScreenPosition = currentCamera:WorldToScreenPoint(headPosition)
            local distanceToCrosshair = (Vector2.new(headScreenPosition.X, headScreenPosition.Y) - crosshairPosition).Magnitude
            
            if distanceToCrosshair < _G.AimbotFOV then
                currentCamera.CFrame = currentCamera.CFrame:Lerp(CFrame.new(currentCamera.CFrame.Position, headPosition), _G.AimbotSmoothing)
            end
        end
    end
end

UserInputService.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        aimbotEnabled = true
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        aimbotEnabled = false
    end
end)

RunService.RenderStepped:Connect(updateAimbot)
