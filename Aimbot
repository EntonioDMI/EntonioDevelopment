-- Aimbot.lua

-- Global Configuration
_G.AimbotTeamCheck = false   -- Set to true to only target players on different teams
_G.AimbotFOV = 150           -- Field of View
_G.AimbotSmoothing = 0.1     -- Smoothing factor (0 = instant, 1 = no movement)
_G.AimbotFOVColor = Color3.fromRGB(255, 128, 128) -- FOV circle color
_G.AimbotFOVThickness = 1.5  -- FOV circle thickness
_G.AimbotEnabled = false     -- Aimbot enabled state
_G.IgnorePlayers = {}        -- List of players to ignore
_G.AddingFriends = false     -- State for adding friends

-- Services
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")

-- GUI
local FOVring = Drawing.new("Circle")
FOVring.Visible = false
FOVring.Thickness = _G.AimbotFOVThickness
FOVring.Radius = _G.AimbotFOV
FOVring.Transparency = 1
FOVring.Color = _G.AimbotFOVColor

local function getClosestVisiblePlayer(camera)
    local mouseLocation = UserInputService:GetMouseLocation()
    local closestPlayer = nil
    local closestDistance = math.huge
    
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer and not _G.IgnorePlayers[player.Name] then
            local character = player.Character
            if character and character:FindFirstChild("Head") then
                local headPosition = character.Head.Position
                local headScreenPosition = camera:WorldToScreenPoint(headPosition)
                local distanceToMouse = (Vector2.new(headScreenPosition.X, headScreenPosition.Y) - mouseLocation).Magnitude
                
                if distanceToMouse < closestDistance and distanceToMouse < _G.AimbotFOV then
                    closestDistance = distanceToMouse
                    closestPlayer = player
                end
            end
        end
    end
    
    return closestPlayer
end

local aimbotActive = false
local function updateAimbot()
    local mouseLocation = UserInputService:GetMouseLocation()
    FOVring.Position = Vector2.new(mouseLocation.X, mouseLocation.Y)
    
    if _G.AimbotEnabled and aimbotActive then
        FOVring.Visible = true
        
        local currentCamera = workspace.CurrentCamera
        local closestPlayer = getClosestVisiblePlayer(currentCamera)
        
        if closestPlayer then
            local headPosition = closestPlayer.Character.Head.Position
            local direction = (headPosition - currentCamera.CFrame.Position).Unit
            local targetCFrame = CFrame.new(currentCamera.CFrame.Position, currentCamera.CFrame.Position + direction)
            
            currentCamera.CFrame = currentCamera.CFrame:Lerp(targetCFrame, _G.AimbotSmoothing)
        end
    else
        FOVring.Visible = _G.AimbotEnabled
    end
end

UserInputService.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        aimbotActive = true
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        aimbotActive = false
    end
end)

UserInputService.InputBegan:Connect(function(input)
    if _G.AddingFriends and input.UserInputType == Enum.UserInputType.MouseButton1 then
        local mouseLocation = UserInputService:GetMouseLocation()
        local currentCamera = workspace.CurrentCamera
        
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= Players.LocalPlayer then
                local character = player.Character
                if character and character:FindFirstChild("Head") then
                    local headPosition = character.Head.Position
                    local headScreenPosition = currentCamera:WorldToScreenPoint(headPosition)
                    local distanceToMouse = (Vector2.new(headScreenPosition.X, headScreenPosition.Y) - mouseLocation).Magnitude
                    
                    if distanceToMouse < 50 then -- Click threshold
                        if _G.IgnorePlayers[player.Name] then
                            _G.IgnorePlayers[player.Name] = nil
                        else
                            _G.IgnorePlayers[player.Name] = true
                        end
                        break
                    end
                end
            end
        end
    end
end)

RunService.RenderStepped:Connect(updateAimbot)
